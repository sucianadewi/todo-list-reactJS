{"version":3,"sources":["components/Form.js","components/TodoList.js","components/Header.js","App.js","index.js"],"names":["Form","_ref","input","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","react_default","a","createElement","className","onSubmit","event","preventDefault","id","completed","newTodo","map","todo","updateTodo","concat","Object","toConsumableArray","uuidv4","type","placeholder","name","value","required","onChange","target","TodoList","handleComplete","item","objectSpread","handleEdit","_ref2","findTodo","find","handleDelete","_ref3","filter","key","Fragment","index_esm","onClick","Header","initialState","JSON","parse","localStorage","getItem","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","setItem","stringify","components_Form","components_TodoList","App","components_Header","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.0abb36ef.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Form({ input, setInput, todos, setTodos, editTodo, setEditTodo }) {\r\n  const updateTodo = (title, id, completed) => {\r\n    const newTodo = todos.map((todo) =>\r\n      todo.id === id ? { title, id, completed } : todo\r\n    );\r\n    setTodos(newTodo);\r\n    setEditTodo(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editTodo) {\r\n      setInput(editTodo.title);\r\n    } else {\r\n      setInput(\"\");\r\n    }\r\n  }, [setInput, editTodo]);\r\n\r\n  const onInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!editTodo) {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          id: uuidv4(),\r\n          title: input,\r\n          completed: false,\r\n        },\r\n      ]);\r\n      setInput(\"\");\r\n    } else {\r\n      updateTodo(input, editTodo.id, editTodo.completed);\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add todo list...\"\r\n        name=\"text\"\r\n        className=\"todo-input\"\r\n        value={input}\r\n        required\r\n        onChange={onInputChange}\r\n      />\r\n      <button className=\"todo-button\">{editTodo ? \"Update\" : \"Add\"}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\n\r\nfunction TodoList({ todos, setTodos, setEditTodo }) {\r\n  const handleComplete = (todo) => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return { ...item, completed: !item.completed };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEdit = ({ id }) => {\r\n    const findTodo = todos.find((todo) => todo.id === id);\r\n    setEditTodo(findTodo);\r\n  };\r\n\r\n  const handleDelete = ({ id }) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => (\r\n        <li className=\"todo-row\" key={todo.id}>\r\n          {todo.completed ? (\r\n            <>\r\n              <div\r\n                type=\"text\"\r\n                className=\"complete\"\r\n                onChange={(event) => event.preventDefault()}\r\n              >\r\n                {todo.title}\r\n              </div>\r\n              <div className=\"icons\">\r\n                <AiFillCheckCircle\r\n                  className=\"complete-icon\"\r\n                  onClick={() => handleComplete(todo)}\r\n                />\r\n                <AiFillEdit\r\n                  className=\"edit-icon\"\r\n                  onClick={() => handleEdit(todo)}\r\n                />\r\n                <AiFillCloseCircle\r\n                  className=\"delete-icon\"\r\n                  onClick={() => handleDelete(todo)}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div type=\"text\" onChange={(event) => event.preventDefault()}>\r\n                {todo.title}\r\n              </div>\r\n              <div className=\"icons\">\r\n                <AiFillCheckCircle\r\n                  className=\"complete-icon\"\r\n                  onClick={() => handleComplete(todo)}\r\n                />\r\n                <AiFillEdit\r\n                  className=\"edit-icon\"\r\n                  onClick={() => handleEdit(todo)}\r\n                />\r\n                <AiFillCloseCircle\r\n                  className=\"delete-icon\"\r\n                  onClick={() => handleDelete(todo)}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction Header() {\r\n  const initialState = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState(initialState);\r\n  const [editTodo, setEditTodo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <Form\r\n        input={input}\r\n        setInput={setInput}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        editTodo={editTodo}\r\n        setEditTodo={setEditTodo}\r\n      />\r\n      <TodoList todos={todos} setTodos={setTodos} setEditTodo={setEditTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}